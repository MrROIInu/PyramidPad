-- Drop existing tables and functions
DROP TABLE IF EXISTS public.orders CASCADE;
DROP TABLE IF EXISTS public.trades CASCADE;
DROP TABLE IF EXISTS public.tokens CASCADE;
DROP FUNCTION IF EXISTS public.initialize_database() CASCADE;
DROP FUNCTION IF EXISTS update_updated_at_column() CASCADE;

-- Create updated_at trigger function
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = CURRENT_TIMESTAMP;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create initialize_database function
CREATE OR REPLACE FUNCTION public.initialize_database()
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
BEGIN
  -- Create tokens table
  CREATE TABLE IF NOT EXISTS public.tokens (
    symbol text PRIMARY KEY,
    name text NOT NULL,
    total_supply numeric NOT NULL,
    contract_address text NOT NULL,
    price_usd numeric NOT NULL DEFAULT 0,
    volume_24h numeric NOT NULL DEFAULT 0,
    price_change_7d numeric NOT NULL DEFAULT 0,
    created_at timestamptz DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamptz DEFAULT CURRENT_TIMESTAMP
  );

  -- Create trades table
  CREATE TABLE IF NOT EXISTS public.trades (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_token text NOT NULL REFERENCES public.tokens(symbol),
    to_token text NOT NULL REFERENCES public.tokens(symbol),
    from_amount numeric NOT NULL,
    to_amount numeric NOT NULL,
    price numeric NOT NULL,
    created_at timestamptz DEFAULT CURRENT_TIMESTAMP
  );

  -- Create orders table
  CREATE TABLE IF NOT EXISTS public.orders (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_token text NOT NULL REFERENCES public.tokens(symbol),
    to_token text NOT NULL REFERENCES public.tokens(symbol),
    from_amount numeric NOT NULL,
    to_amount numeric NOT NULL,
    swap_tx text NOT NULL,
    claimed boolean DEFAULT false,
    claim_count integer DEFAULT 0,
    status text DEFAULT 'active',
    created_at timestamptz DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamptz DEFAULT CURRENT_TIMESTAMP
  );

  -- Create triggers
  DROP TRIGGER IF EXISTS update_tokens_updated_at ON public.tokens;
  CREATE TRIGGER update_tokens_updated_at
    BEFORE UPDATE ON public.tokens
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

  DROP TRIGGER IF EXISTS update_orders_updated_at ON public.orders;
  CREATE TRIGGER update_orders_updated_at
    BEFORE UPDATE ON public.orders
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

  -- Enable RLS
  ALTER TABLE public.tokens ENABLE ROW LEVEL SECURITY;
  ALTER TABLE public.trades ENABLE ROW LEVEL SECURITY;
  ALTER TABLE public.orders ENABLE ROW LEVEL SECURITY;

  -- Create policies
  DROP POLICY IF EXISTS "Enable read access for all users" ON public.tokens;
  CREATE POLICY "Enable read access for all users" ON public.tokens
    FOR SELECT TO anon USING (true);

  DROP POLICY IF EXISTS "Enable insert for all users" ON public.tokens;
  CREATE POLICY "Enable insert for all users" ON public.tokens
    FOR INSERT TO anon WITH CHECK (true);

  DROP POLICY IF EXISTS "Enable update for all users" ON public.tokens;
  CREATE POLICY "Enable update for all users" ON public.tokens
    FOR UPDATE TO anon USING (true);

  DROP POLICY IF EXISTS "Enable read access for all users" ON public.trades;
  CREATE POLICY "Enable read access for all users" ON public.trades
    FOR SELECT TO anon USING (true);

  DROP POLICY IF EXISTS "Enable insert for all users" ON public.trades;
  CREATE POLICY "Enable insert for all users" ON public.trades
    FOR INSERT TO anon WITH CHECK (true);

  DROP POLICY IF EXISTS "Enable read access for all users" ON public.orders;
  CREATE POLICY "Enable read access for all users" ON public.orders
    FOR SELECT TO anon USING (true);

  DROP POLICY IF EXISTS "Enable insert for all users" ON public.orders;
  CREATE POLICY "Enable insert for all users" ON public.orders
    FOR INSERT TO anon WITH CHECK (true);

  DROP POLICY IF EXISTS "Enable update for all users" ON public.orders;
  CREATE POLICY "Enable update for all users" ON public.orders
    FOR UPDATE TO anon USING (true);
END;
$$;

-- Initialize the database
SELECT public.initialize_database();