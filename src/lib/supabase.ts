import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://vmlrhtccpuhttgaszymo.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZtbHJodGNjcHVodHRnYXN6eW1vIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzIwNzI0MjksImV4cCI6MjA0NzY0ODQyOX0.g_oEjsXloQ20YFL3YW1xSbQRe2ZPeF01R4ItclFEYiY';

export const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    persistSession: false
  },
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  }
});

// Initialize database tables
export const initializeDatabase = async () => {
  try {
    // Create tokens table
    const { error: tokensError } = await supabase.query(`
      CREATE TABLE IF NOT EXISTS public.tokens (
        symbol TEXT PRIMARY KEY,
        price_usd NUMERIC NOT NULL DEFAULT 0,
        market_cap NUMERIC NOT NULL DEFAULT 0,
        last_updated TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
      );
    `);

    if (tokensError) {
      console.warn('Error creating tokens table:', tokensError);
    }

    // Create token_price_history table
    const { error: historyError } = await supabase.query(`
      CREATE TABLE IF NOT EXISTS public.token_price_history (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        symbol TEXT NOT NULL,
        price_usd NUMERIC NOT NULL,
        timestamp TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
      );

      CREATE INDEX IF NOT EXISTS idx_token_price_history_symbol_timestamp 
        ON token_price_history (symbol, timestamp);
    `);

    if (historyError) {
      console.warn('Error creating price history table:', historyError);
    }

    // Enable RLS and create policies
    await supabase.query(`
      ALTER TABLE public.tokens ENABLE ROW LEVEL SECURITY;
      ALTER TABLE public.token_price_history ENABLE ROW LEVEL SECURITY;

      CREATE POLICY IF NOT EXISTS "Enable read access for all users" ON public.tokens
        FOR SELECT TO anon USING (true);

      CREATE POLICY IF NOT EXISTS "Enable update for all users" ON public.tokens
        FOR UPDATE TO anon USING (true);

      CREATE POLICY IF NOT EXISTS "Enable insert for all users" ON public.tokens
        FOR INSERT TO anon WITH CHECK (true);

      CREATE POLICY IF NOT EXISTS "Enable read access for all users" ON public.token_price_history
        FOR SELECT TO anon USING (true);

      CREATE POLICY IF NOT EXISTS "Enable insert for all users" ON public.token_price_history
        FOR INSERT TO anon WITH CHECK (true);
    `);

    return true;
  } catch (error) {
    console.warn('Database initialization error:', error);
    return false;
  }
};